{"version":3,"sources":["components/Layout/Layout.module.scss","components/TreadComponent/ThreadComponent.module.scss","components/ManipulateThreadComponent/ManipulateThreadComponent.js","services/constants.js","services/GoogleAuthService.js","services/UserService.js","services/index.js","services/api.adapter.js","services/ThreadService.js","models/createThreadModel.js","actions/threadActions.js","types/threadTypes.js","components/ManipulateThreadComponent/ManipulateThreadComponent.container.js","components/Header/Header.js","components/Header/Header.container.js","components/Navbar/Navbar.js","components/ThreadAuthorComponent/ThreadAuthorComponent.js","components/ThreadAuditComponent/ThreadAuditComponent.js","components/CommentComponent/CommentComponent.js","components/CreateCommentComponent/CreateCommentComponent.js","components/Loader/Loader.js","components/TreadComponent/ThreadComponent.js","components/ThreadViewPage/ThreadViewPage.js","components/ThreadViewPage/ThreadViewPage.container.js","components/AllThreadsPage/AllThreadsPage.js","components/AllThreadsPage/AllThreadsPage.container.js","components/Layout/Layout.js","types/userTypes.js","App.js","actions/userActions.js","serviceWorker.js","reducers/userReducer.js","reducers/threadsReducer.js","reducers/rootReducer.js","store.js","index.js","components/ThreadAuditComponent/ThreadAuditComponent.module.scss","components/CommentComponent/CommentComponent.module.scss","components/Header/Header.module.scss","components/ThreadAuthorComponent/ThreadAuthorComponent.module.scss","components/AllThreadsPage/AllThreadsPage.module.scss"],"names":["module","exports","useStyles","makeStyles","theme","root","width","height","appBar","position","backgroundColor","boxShadow","title","marginLeft","spacing","textTransform","flex","container","display","flexWrap","padding","flexDirection","textField","marginRight","whiteSpace","smallTextField","nickNameWrapper","formControl","margin","controlBtns","marginTop","button","fontWeight","fontSize","submitBtn","color","Transition","React","forwardRef","props","ref","Slide","direction","pathList","base","login","like","dislike","GoogleAuthService","signIn","window","gapi","auth2","getAuthInstance","signOut","apiAdapter","composeUrl","path","_url","get","params","endpoint","request","axios","then","response","catch","error","Promise","reject","post","body","put","patch","env","process","REACT_APP_ENV","this","userService","adapter","loginUser","data","_adapter","_loginUrl","_baseUrl","threadService","getThreads","getThread","id","createThread","thread","updateThread","subscribeToThread","unsubscribeFromThread","createComment","updateComment","userId","_likeUrl","_dislikeUrl","CreateThreadModel","text","authorId","username","users","author","subscribers","updateThreadField","payload","type","resetThreadFields","dispatch","getState","threadData","threadsReducer","userReducer","user","_id","NotificationManager","success","editThread","onCreateComment","nickName","commentText","repliedTo","threadId","selectedThread","repliedToUser","find","el","setSelectedThread","onUpdateComment","commentId","setThreadData","changeThread","getThreadById","res","info","getAllThreads","ManipulateThreadComponent","compose","withRouter","connect","actions","bindActionCreators","history","action","isOpen","onClose","classes","useState","isChecked","setIsChecked","updateThreadData","target","value","name","console","log","toString","field","Dialog","fullWidth","maxWidth","open","TransitionComponent","AppBar","className","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","TextField","autoComplete","cx","onChange","required","label","FormControlLabel","control","Checkbox","checked","config","dictionaries","adjectives","animals","separator","length","uniqueNamesGenerator","rows","multiline","Button","push","autocomplete","border","input","inputRoot","header","headerPlaceholder","search","borderRadius","alignSelf","inputInput","paddingLeft","transition","transitions","create","searchIcon","pointerEvents","alignItems","justifyContent","zIndex","labelRoot","createThreadButton","ConnectedSearchBar","state","threads","styles","searchWrapper","Autocomplete","freeSolo","e","a","autoSelect","options","getOptionLabel","option","renderInput","renderOption","link","to","Header","createThreadOpen","setCreateThreadOpen","logoWrapper","logo","src","alt","createThreadWrapper","drawerPaper","top","content","flexGrow","palette","background","default","listIcon","minWidth","navLinksData","icon","PermanentDrawerLeft","CssBaseline","Drawer","drawer","paper","anchor","List","component","map","index","key","ListItem","ListItemIcon","ListItemText","primary","Divider","ThreadAuthorComponent","threadAuthor","threadAuthorBox","slice","authorInfo","role","ThreadAuditComponent","subscribersCount","dislikesCount","likesCount","isClickable","likeStatus","createdDate","threadMetaInfo","divider","active","Comment","isEditing","toggleIsEditing","newCommentText","comment","setState","editComment","resetIsEditing","renderButtons","editable","btnHolder","size","constructAdditionalText","wasEdited","isAuthorsComment","trim","repliedToHandler","inputText","flexWrapper","leftShift","Chip","chip","Component","CommentComponent","withStyles","repliedToWrapper","CreateCommentComponent","onRepliedToReset","setNickName","setCommentText","resetCommentFields","onDelete","Loader","randomize","Math","floor","random","PREVIEW","FULL","ThreadComponent","closeEditThread","editThreadOpen","openEditThread","renderPreviewThread","commentsCount","renderThreadHeader","answersCount","counterWrapper","subscriptionHandler","isSubscribed","isAuthor","findUserInThread","likesList","dislikesList","scrollTo","document","scrollHeight","renderThread","commentsList","threadAuthorId","authorName","likeThread","dislikeThread","subscribed","threadFullWrapper","headingWrapper","description","subsWrapper","bind","btn","dividerWrapper","comments","userHighlight","threadView","heading","hovered","renderContent","wrapper","defaultProps","ThreadViewPage","match","prevId","ThreadView","NEWEST","MOST_DISCUSSED","MOST_LIKED","sortOptions","AllThreadsPage","sortBy","sortDirection","sortByChangeHandler","currentTarget","newDirection","getSortedThreads","sort","b","Date","isActive","sortedThreads","reverse","iconWrapper","buttonContainer","ButtonGroup","renderThreads","AllThreads","Feed","Cabinet","LoginPage","loginHandler","setUser","err","logOutHandler","logOut","Layout","isUserLoggedIn","mainWrapper","exact","SET_USER","LOG_OUT","App","load","init","client_id","Boolean","location","hostname","initialState","createdThreads","email","subscribedThreads","__v","threadsCopy","foundThreadIndex","findIndex","combineReducers","appReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d580ffc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"Layout_mainWrapper__2PVMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ThreadComponent_wrapper__12d69\",\"answersCount\":\"ThreadComponent_answersCount__2Ip58\",\"heading\":\"ThreadComponent_heading__N59bB\",\"hovered\":\"ThreadComponent_hovered__tmw82\",\"description\":\"ThreadComponent_description__UtBz-\",\"counterWrapper\":\"ThreadComponent_counterWrapper__mYNOB\",\"headingWrapper\":\"ThreadComponent_headingWrapper__3AgFC\",\"subsWrapper\":\"ThreadComponent_subsWrapper__3WSzh\",\"divider\":\"ThreadComponent_divider__1xEsl\",\"btn\":\"ThreadComponent_btn__2a6m3\",\"threadFullWrapper\":\"ThreadComponent_threadFullWrapper__1LVL2\",\"dividerWrapper\":\"ThreadComponent_dividerWrapper__u1GHJ\",\"comments\":\"ThreadComponent_comments__2FLse\"};","import React, { useState, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport cx from 'classnames';\nimport { uniqueNamesGenerator, adjectives, animals } from 'unique-names-generator';\n\nconst EDIT = 'edit';\nconst CREATE = 'create';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '80%',\n    height: '70vh'\n  },\n  appBar: {\n    position: 'relative',\n    backgroundColor: '#424b5f',\n    boxShadow: 'none'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    textTransform: 'capitalize',\n    flex: 1,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '30px 40px',\n    flexDirection: 'column',\n    flex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '100%',\n    whiteSpace: 'pre-line'\n  },\n  smallTextField: {\n    width: 200\n  },\n  nickNameWrapper: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  formControl: {\n    margin: 0\n  },\n  controlBtns: {\n    marginTop: '16px',\n    marginLeft: 'auto',\n    textTransform: 'capitalize'\n  },\n  button: {\n    fontWeight: 'bold',\n    boxShadow: 'none',\n    marginLeft: '16px',\n    fontSize: '0.7rem'\n  },\n  submitBtn: {\n    backgroundColor: '#65c178',\n    fontWeight: 'bold',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#159776'\n    },\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ManipulateThreadComponent = (\n  {\n    history,\n    action,\n    isOpen,\n    onClose,\n    actions: {\n      updateThreadField,\n      resetThreadFields,\n      createThread,\n      editThread,\n      setSelectedThread\n    },\n    threadData: {\n      title,\n      text,\n      username\n    }\n  }) => {\n  const classes = useStyles();\n  const [isChecked, setIsChecked] = useState(false);\n\n  const toggleAutoGenerator = () => {\n    const config = {\n      dictionaries: [adjectives, animals],\n      separator: ' ',\n      length: 2,\n    };\n\n    const value = !isChecked ? uniqueNamesGenerator(config) : '';\n\n    updateThreadField({ field: 'username', value });\n    setIsChecked(!isChecked);\n  };\n\n  const updateThreadData = ({ target: { value, name } }) => {console.log(value.toString());updateThreadField({ field: name, value })};\n\n  const manipulateThread = () => {\n    switch (action) {\n      case EDIT: {\n        editThread().then(data => {\n          setSelectedThread(data);\n          onClose();\n        });\n        break;\n      }\n\n      case CREATE: {\n        createThread().then(data => {\n          const { _id } = data;\n          const { push } = history;\n\n          setSelectedThread(data);\n          push(`/feed/${_id}`);\n          onClose();\n        });\n        break;\n      }\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullWidth\n        maxWidth=\"md\"\n        open={isOpen}\n        onClose={onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              {action} Thread\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.container}>\n          {action === CREATE && (\n            <div className={classes.nickNameWrapper}>\n              <TextField\n                autoComplete='off'\n                id=\"standard-basic\"\n                className={cx(classes.textField, classes.smallTextField)}\n                onChange={updateThreadData}\n                required\n                value={username}\n                name=\"username\"\n                label=\"Anon nick name\"\n              />\n              <FormControlLabel\n                className={classes.formControl}\n                control={\n                  <Checkbox\n                    checked={isChecked}\n                    onChange={toggleAutoGenerator}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Generate nick name for you?\"\n              />\n            </div>\n          )}\n\n          <TextField\n            autoComplete='off'\n            required\n            id=\"standard-multiline-flexible\"\n            label=\"Thread Title\"\n            rows=\"2\"\n            multiline\n            value={title}\n            onChange={updateThreadData}\n            name=\"title\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\" // ?\n            // variant=\"filled\" // ?\n          />\n\n          <TextField\n            required\n            autoComplete='off'\n            id=\"standard-multiline-flexible\"\n            label=\"Thread Description\"\n            multiline\n            rows=\"6\"\n            value={text}\n            onChange={updateThreadData}\n            name=\"text\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\" // ?\n            // variant=\"filled\" // ?\n\n          />\n\n          <div className={classes.controlBtns}>\n            <Button variant=\"contained\" onClick={resetThreadFields} color=\"secondary\" className={classes.button}>\n              Reset\n            </Button>\n\n            <Button variant=\"contained\" onClick={manipulateThread} className={cx(classes.button, classes.submitBtn)}>\n              {action} Thread\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n};","export const baseUrlDev = 'http://localhost:5000';\nexport const baseUrlProd = 'add here url for prod';\nexport const pathList = {\n  user: {\n    base: '/users',\n    login: '/users/login'\n  },\n  thread: {\n    base: '/threads',\n    like: '/threads/like',\n    dislike: '/threads/dislike'\n  }\n};\n","export class GoogleAuthService {\n\n  static signIn = () => {\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\n\n    return GoogleAuth.signIn();\n  }\n\n  static signOut = () => {\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\n\n    return GoogleAuth.signOut();\n  }\n}\n","import { pathList } from './constants';\nimport { GoogleAuthService } from './GoogleAuthService';\nexport class UserService {\n\tconstructor(adapter) {\n\t\tthis._adapter = adapter;\n\t\tthis._baseUrl = pathList.user.base;\n\t\tthis._loginUrl = pathList.user.login;\n\t}\n\n\tloginUser = () =>\n\t\tGoogleAuthService.signIn().then(data => this._adapter.post(this._loginUrl, data).then(({ data }) => data));\n\t\t\n\tsignOut = () => GoogleAuthService.signOut();\n}\n","import { ApiAdapter } from './api.adapter';\nimport { UserService } from './UserService';\nimport { ThreadService } from './ThreadService';\n\nconst apiAdapter = new ApiAdapter();\nexport const userService = new UserService(apiAdapter);\nexport const threadService = new ThreadService(apiAdapter);\n","/* eslint-disable */\nimport axios from 'axios';\nimport { baseUrlDev, baseUrlProd } from './constants';\n\nexport class ApiAdapter {\n  constructor() {\n    const env = process.env.REACT_APP_ENV;\n    this._url = env === 'development' ? baseUrlDev : baseUrlProd;\n\n    // alternative to approach above\n    // this._url = location.origin.includes('localhost') ? baseUrlDev : baseUrlProd;\n  }\n\n  composeUrl = path => `${this._url}${path}`;\n\n  get = (path, params = {}) => {\n    const endpoint = this.composeUrl(path);\n\n    const request = axios.get(endpoint, { params })\n      .then(response => response)\n      .catch(error => Promise.reject({ error }));\n\n    return request;\n  };\n\n  post = (path, body = {}) => {\n    const endpoint = this.composeUrl(path);\n    \n    const request = axios.post(endpoint, body)\n      .then(response => {\n        return response;\n      })\n      .catch(error => Promise.reject({ error }));\n\n    return request;\n  };\n\n  put = (path, body = {}) => {\n    const endpoint = this.composeUrl(path);\n\n    const request = axios.put(endpoint, body)\n      .then(response => response)\n      .catch(error => Promise.reject({ error }));\n\n    return request;\n  };\n\n  patch = (path, body = {}) => {\n    const endpoint = this.composeUrl(path);\n\n    const request = axios.patch(endpoint, body)\n      .then(response => response)\n      .catch(error => Promise.reject({ error }));\n\n    return request;\n  };\n}\n","import { pathList } from './constants';\n\nexport class ThreadService {\n\tconstructor(adapter) {\n\t\tthis._adapter = adapter;\n\t\tthis._baseUrl = pathList.thread.base;\n\t\tthis._likeUrl = pathList.thread.like;\n\t\tthis._dislikeUrl = pathList.thread.dislike;\n\t}\n\n\n\tgetThreads = (params) => {\n\t\treturn this._adapter.get(this._baseUrl, params).then(({ data }) => data);\n\t};\n\n\tgetThread = (id) => {\n\t\treturn this._adapter.get(`${this._baseUrl}/${id}`).then(({ data }) => (data));\n\t};\n\n\tcreateThread = (thread) => {\n\t\treturn this._adapter.post(`${this._baseUrl}/create`, thread).then(({ data }) => ( data ));\n\t};\n\n\tupdateThread = (thread) => {\n\t\treturn this._adapter.patch(`${this._baseUrl}/update`, thread).then(({ data }) => ( data ));\n\t};\n\n\tsubscribeToThread = (params) => {\n\t\treturn this._adapter.patch(`${this._baseUrl}/subscribe`, params).then(({ data }) => ( data ));\n\t};\n\n\tunsubscribeFromThread = (params) => {\n\t\treturn this._adapter.patch(`${this._baseUrl}/unsubscribe`, params).then(({ data }) => ( data ));\n\t};\n\n\tcreateComment = (params) => {\n\t\treturn this._adapter.patch(`${this._baseUrl}/create-comment`, params).then(({ data }) => ( data ));\n\t};\n\n\tupdateComment = (params) => {\n\t\treturn this._adapter.patch(`${this._baseUrl}/update-comment`, params).then(({ data }) => ( data ));\n\t};\n\n\tlike = ({ id, userId }) => {\n\t\treturn this._adapter.patch(`${this._likeUrl}`, { id, userId }).then(({ data }) => data);\n\t};\n\n\tdislike = ({ id, userId }) => {\n\t\treturn this._adapter.patch(`${this._dislikeUrl}`, { id, userId }).then(({ data }) => data);\n\t};\n}\n","export class CreateThreadModel {\n  constructor({ title, text, authorId, username }) {\n    this.title = title;\n    this.text = text;\n    this.users = [{ userId: authorId, username }];\n    this.author = { userId: authorId, username };\n    this.subscribers = [{ userId: authorId }];\n  }\n}","import { NotificationManager } from 'react-notifications';\nimport { threadService } from '../services';\nimport { CreateThreadModel } from '../models/createThreadModel';\nimport {\n  UPDATE_THREAD_FIELD,\n  RESET_THREAD,\n  SET_THREAD_DATA,\n  SET_SELECTED_THREAD,\n  SET_ALL_THREADS,\n  CHANGE_THREAD\n} from '../types/threadTypes';\n\nexport const updateThreadField = (payload) => ({ type: UPDATE_THREAD_FIELD, payload });\nexport const resetThreadFields = () => ({ type: RESET_THREAD });\nexport const createThread = () => (dispatch, getState) => {\n  const {\n    threadsReducer: { threadData },\n    userReducer: { user: { _id: authorId } }\n  } = getState();\n\n  const thread = new CreateThreadModel({ ...threadData, authorId });\n\n  return threadService.createThread(thread).then((data) => {\n    NotificationManager.success('Your thread was created', 'Success');\n    return data;\n  });\n};\n\nexport const editThread = () => (dispatch, getState) => {\n  const {\n    threadsReducer: { threadData: { username, ...data } },\n  } = getState();\n\n  return threadService.updateThread(data).then((data) => {\n    NotificationManager.success('Your thread was edited', 'Success');\n    return data;\n  });\n};\n\nexport const onCreateComment = ({ nickName: username, commentText: text, repliedTo }) => (dispatch, getState) => {\n  const {\n    userReducer: {\n      user: { _id: userId },\n    },\n    threadsReducer: {\n      selectedThread: { _id: threadId },\n      selectedThread\n    }\n  } = getState();\n\n  const repliedToUser = selectedThread.users.find(el => el.username === repliedTo);\n\n  const params = { userId, threadId, username, text, repliedToUser };\n\n  return threadService.createComment(params).then(data => {\n    dispatch(setSelectedThread(data));\n    NotificationManager.success('Your comment was created', 'Success');\n  });\n};\n\nexport const onUpdateComment = ({ commentId, text }) => (dispatch, getState) => {\n  const { threadsReducer: { selectedThread: { _id: threadId } } } = getState();\n  const params = { threadId, commentId, text };\n\n  return threadService.updateComment(params).then(data => {\n    NotificationManager.success('Your comment was updated', 'Success');\n    dispatch(setSelectedThread(data));\n  });\n};\n\nexport const setThreadData = (payload) => ({ type: SET_THREAD_DATA, payload });\n\nexport const setSelectedThread = (payload) => ({ type: SET_SELECTED_THREAD, payload });\n\nexport const setAllThreads = (payload) => ({ type: SET_ALL_THREADS, payload });\nexport const changeThread = (payload) => ({ type: CHANGE_THREAD, payload });\n\nexport const getThreadById = (id) => (dispatch) => {\n  threadService.getThread(id).then(data => dispatch(setSelectedThread(data)));\n};\n\n// i know, this is duplication, but so it is easier to follow\nexport const subscribeToThread = (data) => (dispatch) => {\n  threadService.subscribeToThread(data).then(res => {\n    NotificationManager.info('subscribed to this thread', 'Info');\n    dispatch(setSelectedThread(res))\n  })\n};\n\nexport const unsubscribeFromThread = (data) => (dispatch) => {\n  threadService.unsubscribeFromThread(data).then(res => {\n    NotificationManager.info('unsubscribed from this thread', 'Info');\n    dispatch(setSelectedThread(res))\n  })\n};\n\nexport const getAllThreads = () => (dispatch) => {\n  threadService.getThreads().then(data => dispatch(setAllThreads(data)));\n};\n\nexport const like = (payload) => (dispatch) => {\n  const { id, userId } = payload;\n\n  threadService.like({ id, userId }).then(data => {\n    NotificationManager.success('You\\'ve liked thread', 'Success');\n    dispatch(changeThread({ id, thread: { ...data } }))\n  });\n};\n\nexport const dislike = (payload) => (dispatch) => {\n  const { id, userId } = payload;\n  threadService.dislike({ id, userId }).then(data => {\n    NotificationManager.success('You\\'ve disliked thread', 'Success');\n    dispatch(changeThread({ id, thread: { ...data } }));\n  });\n};\n","export const UPDATE_THREAD_FIELD = 'UPDATE_THREAD_FIELD';\nexport const RESET_THREAD = 'RESET_THREAD';\nexport const SET_THREAD_DATA = 'SET_THREAD_DATA';\nexport const SET_SELECTED_THREAD = 'SET_SELECTED_THREAD';\nexport const SET_ALL_THREADS = 'SET_ALL_THREADS';\nexport const CHANGE_THREAD = 'CHANGE_THREAD';\n","import { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { ManipulateThreadComponent as ManipulateThread } from './ManipulateThreadComponent';\nimport {\n  updateThreadField,\n  resetThreadFields,\n  createThread,\n  editThread,\n  setSelectedThread\n} from '../../actions/threadActions';\n\nconst mapStateToProps = ({ threadsReducer: { threadData } }) => ({ threadData });\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators({\n    updateThreadField,\n    resetThreadFields,\n    createThread,\n    editThread,\n    setSelectedThread\n  }, dispatch)\n});\n\nexport const ManipulateThreadComponent = compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(ManipulateThread);\n\n","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nimport { ManipulateThreadComponent } from '../ManipulateThreadComponent';\nimport { connect } from 'react-redux';\n\nimport styles from './Header.module.scss';\n\nconst useStyles = makeStyles(theme => ({\n\tautocomplete: {\n\t  border: 'none',\n\t\tinput: {\n\t\t\tcolor: 'white',\n\t\t\tpadding: '0'\n\t\t},\n\t\tinputRoot: {\n\t\t\theight: '100%'\n\t\t},\n\t\tlabel: {\n\t\t\tcolor: 'white'\n\t\t}\n\t},\n\theader: {\n\t\tbackgroundColor: '#424b5f',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\theight: '70px',\n\t\tboxShadow: 'none'\n\t},\n\theaderPlaceholder: {\n\t\twidth: '100%',\n\t\theight: '70px'\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#424b5f',\n\t\twidth: '100%',\n\t\talignSelf: 'center'\n\t},\n\tinputInput: {\n\t\tpadding: '0',\n\t\tpaddingLeft: '50px',\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\t'&:focus, &:hover': {\n\t\t\tbackgroundColor: '#3a4357',\n\t\t\tborderRadius: '5px'\n\t\t}\n\t},\n\n\tsearchIcon: {\n\t\twidth: '48px',\n\t\theight: '100%',\n\t\tposition: 'absolute',\n\t\tpointerEvents: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tzIndex: 1\n\t},\n\ttextField: {\n\t\tdisplay: 'flex',\n\t\tcolor: 'white',\n\t\theight: '100%',\n\t\twidth: '100%',\n\t\t'& input': {\n\t\t\theight: '100%',\n\t\t\tcolor: 'white',\n\t\t\tpadding: '0 0 0 40px !important'\n\t\t},\n\t\t'& label': {\n\t\t\tcolor: 'white'\n\t\t}\n\t},\n\tlabelRoot: {\n\t\tcolor: 'white'\n\t},\n\tcreateThreadButton: {\n\t\tbackgroundColor: '#65c178',\n\t\tfontSize: '0.7rem',\n\t\tfontWeight: 'bold',\n\t\tcolor: 'white',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#159776'\n\t\t},\n\t\twidth: '150px',\n\t\theight: '36px'\n\t}\n}));\n\nconst SearchBar = ({ threads, ...props }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={styles.searchWrapper}>\n\t\t\t<div className={classes.search}>\n\t\t\t\t<div className={classes.searchIcon}>\n\t\t\t\t\t<SearchIcon />\n\t\t\t\t</div>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tclassName={classes.autocomplete}\n\t\t\t\t\tfreeSolo\n\t\t\t\t\tonChange={(e,a) => {console.log({e, a});props.history.push(`/feed/${a._id}`)}}\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\tinputRoot: classes.inputRoot\n\t\t\t\t\t}}\n\t\t\t\t\tautoSelect={true}\n\t\t\t\t\toptions={threads}\n\t\t\t\t\tgetOptionLabel={option => option.title}\n\t\t\t\t\trenderInput={params => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\troot: classes.textField\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\trenderOption={option => (\n\t\t\t\t\t\t<div className={styles.link} to={`/feed/${option._id}`}>\n\t\t\t\t\t\t\t{option.title}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tthreads: state.threadsReducer.threads\n\t};\n};\n\nconst ConnectedSearchBar = connect(mapStateToProps)(SearchBar);\n\nexport default function ButtonAppBar(props) {\n\tconsole.log({props})\n\tconst classes = useStyles();\n\tconst [createThreadOpen, setCreateThreadOpen] = useState(false);\n\n\tconst openCreateThread = () => setCreateThreadOpen(true);\n\n\tconst closeCreateThread = () => setCreateThreadOpen(false);\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar position=\"fixed\" className={classes.header}>\n\t\t\t\t<div className={styles.logoWrapper}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={styles.logo}\n\t\t\t\t\t\tsrc=\"https://image.flaticon.com/icons/svg/2165/2165678.svg\"\n\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ConnectedSearchBar history={props.history} />\n\t\t\t\t<div className={styles.createThreadWrapper}>\n\t\t\t\t\t<Button variant=\"contained\" onClick={openCreateThread} className={classes.createThreadButton}>\n\t\t\t\t\t\tcreate thread\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</AppBar>\n\t\t\t<ManipulateThreadComponent onClose={closeCreateThread} isOpen={createThreadOpen} action=\"create\" />\n\n\t\t\t<div className={classes.headerPlaceholder} />\n\t\t</>\n\t);\n}\n","import {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport HeaderComponent from './Header';\n\n\nconst mapStateToProps = (state) => {\n\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\n};\n\nexport const Header = withRouter(HeaderComponent);\n// export const Header = withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderComponent));\n\n","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DynamicFieldIcon from '@material-ui/icons/DynamicFeed';\nimport ListIcon from '@material-ui/icons/List';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex'\n\t},\n\tappBar: {\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\tmarginLeft: drawerWidth\n\t},\n\tdrawerPaper: {\n\t\tcolor: 'white',\n\t\ttop: '70px',\n\t\tbackgroundColor: '#4f5a6e',\n\t\twidth: '250px',\n\t\t// borderRight: '1px solid #363d4a'\n\t\tborder: 'none'\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tbackgroundColor: theme.palette.background.default,\n\t\tpadding: theme.spacing(3)\n\t},\n\tlistIcon: {\n\t\tminWidth: '30px'\n\t}\n}));\n\nconst navLinksData = [\n\t{\n\t\ttext: 'Personal Cabinet',\n\t\tpath: '/cabinet',\n\t\ticon: <PersonIcon />\n\t},\n\t{\n\t\ttext: 'My Feed',\n\t\tpath: '/feed',\n\t\ticon: <DynamicFieldIcon />\n\t},\n\t{\n\t\ttext: 'Thread with id 1',\n\t\tpath: '/feed/1',\n\t\ticon: <DynamicFieldIcon />\n\t},\n\t{\n\t\ttext: 'All Threads',\n\t\tpath: '/',\n\t\ticon: <ListIcon />\n\t}\n];\n\nexport default function PermanentDrawerLeft() {\n\tconst classes = useStyles();\n\n\tconst renderLinks = () =>\n\t\tnavLinksData.map(({ text, icon, path }, index) => (\n\t\t\t<NavLink to={path} key={path}>\n\t\t\t\t<ListItem button key={text}>\n\t\t\t\t\t<ListItemIcon className={classes.listIcon}>{icon}</ListItemIcon> \n\t\t\t\t\t<ListItemText primary={text} />\n\t\t\t\t</ListItem>\n\t\t\t</NavLink>\n\t\t));\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<Drawer\n\t\t\t\tclassName={classes.drawer}\n\t\t\t\tvariant=\"permanent\"\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.drawerPaper\n\t\t\t\t}}\n\t\t\t\tanchor=\"left\"\n\t\t\t>\n\t\t\t\t<List component=\"nav\">{renderLinks()}</List>\n\t\t\t\t<Divider />\n\t\t\t</Drawer>\n\t\t</div>\n\t);\n}\n","import React from 'react'\nimport styles from './ThreadAuthorComponent.module.scss';\n\nexport const ThreadAuthorComponent = ({ username = 'test', label }) => (\n  <div className={styles.threadAuthor}>\n    <div className={styles.threadAuthorBox}>\n      {username.slice(0, 2)}\n    </div>\n    <div className={styles.authorInfo}>\n      <span>{username}</span>\n      {!!label && <span className={styles.role}>{label}</span>}\n    </div>\n  </div>\n);\n","import React from 'react';\nimport cx from 'classnames';\n\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpOutlinedIcon from '@material-ui/icons/ThumbUp';\n\nimport styles from './ThreadAuditComponent.module.scss';\n\nexport const ThreadAuditComponent = ({\n\tsubscribersCount,\n\tdislikesCount,\n\tlikesCount,\n\tisClickable,\n\tlike,\n\tdislike,\n  likeStatus,\n  createdDate\n}) => {\n\treturn (\n\t\t<div className={styles.threadMetaInfo}>\n\t\t\t{subscribersCount} subscribers\n\t\t\t<span className={styles.divider}>-</span>\n\t\t\t{createdDate}\n\t\t\t<span className={styles.divider}>-</span>\n\t\t\t<div onClick={isClickable ? () => like() : null}>\n\t\t\t\t<ThumbUpOutlinedIcon\n\t\t\t\t\tclassName={cx(styles.icon, {\n\t\t\t\t\t\t[styles.active]: likeStatus === 'liked'\n\t\t\t\t\t})}\n\t\t\t\t/>{' '}\n\t\t\t\t{likesCount}{' '}\n\t\t\t</div>\n\t\t\t<span className={styles.divider}>-</span>\n\t\t\t<div onClick={isClickable ? () => dislike() : null}>\n\t\t\t\t<ThumbDownOutlinedIcon\n\t\t\t\t\tclassName={cx(styles.icon, {\n\t\t\t\t\t\t[styles.active]: likeStatus === 'disliked'\n\t\t\t\t\t})}\n\t\t\t\t/>{' '}\n\t\t\t\t{dislikesCount}{' '}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Chip from '@material-ui/core/Chip';\nimport cx from 'classnames';\n\nimport { ThreadAuthorComponent } from '../ThreadAuthorComponent';\nimport { ThreadAuditComponent } from '../ThreadAuditComponent';\n\nimport styles from './CommentComponent.module.scss';\n\nconst classes = () => ({\n  chip: {\n    marginRight: '6px',\n    height: '26px'\n  }\n});\n\nclass Comment extends Component {\n  state = {\n    isEditing: false,\n    text: '',\n  };\n\n  toggleIsEditing = () => {\n    const { isEditing, text: newCommentText } = this.state;\n    const { comment: { text, _id: commentId }, onUpdateComment } = this.props;\n\n    if (!isEditing) { // open editing\n      this.setState({ isEditing: !isEditing, text })\n    } else { // saving\n      onUpdateComment({ text: newCommentText, commentId }).then(() => {\n        this.setState({ isEditing: !isEditing, text: '' })\n      });\n    }\n  };\n\n  editComment = ({ target: { value } }) => this.setState({ text: value });\n\n  resetIsEditing = () => this.setState({ isEditing: false });\n\n  renderButtons = () => {\n    const { editable } = this.props;\n    if (!editable) return null;\n\n    const { isEditing } = this.state;\n\n    return (\n      <div className={isEditing ? styles.btnHolder : ''}>\n        {isEditing && (\n          <Button onClick={this.resetIsEditing} size='small'>\n            Cancel\n          </Button>\n        )}\n\n        <Button onClick={this.toggleIsEditing} color=\"secondary\" size=\"small\">\n          {isEditing ? 'Save' : 'Edit'}\n        </Button>\n      </div>\n    );\n  };\n\n  constructAdditionalText = () => {\n    const { comment: { wasEdited }, isAuthorsComment } = this.props;\n    let text = '';\n    if (isAuthorsComment) {\n      text = '@thread author ';\n    }\n\n    if (wasEdited) {\n      text += '(edited)'\n    }\n\n    return text.trim();\n  };\n\n  repliedToHandler = () => {\n    const { repliedToHandler, comment: { author: { username } } } = this.props;\n\n    repliedToHandler(username);\n  };\n\n  render() {\n    const { comment: { text, author: { username }, repliedToUser }, userId, classes } = this.props;\n    const { isEditing, text: inputText } = this.state;\n\n    return (\n      <div className={styles.comment}>\n        <div className={styles.flexWrapper}>\n          <ThreadAuthorComponent\n            username={username}\n            label={this.constructAdditionalText()}\n          />\n          {this.renderButtons()}\n        </div>\n\n        <div className={cx(styles.text, styles.leftShift)}>\n          {!!repliedToUser && !isEditing && (\n            <Chip\n              variant=\"outlined\"\n              className={classes.chip}\n              label={`@${repliedToUser.username}`}\n              color={userId === repliedToUser.userId ? 'secondary' : 'primary'}\n            />\n          )}\n          {!isEditing && text}\n\n          {isEditing && (\n            <TextField\n              autoComplete='off'\n              id=\"standard-multiline-flexible\"\n              label=\"Edit your comment\"\n              multiline\n              value={inputText}\n              fullWidth\n              onChange={this.editComment}\n              // margin=\"normal\"\n              variant=\"outlined\"\n              // variant=\"outlined\" // ?\n            />\n          )}\n        </div>\n\n        <div className={cx(styles.flexWrapper, styles.leftShift)}>\n          <ThreadAuditComponent />\n          <Button color='primary' onClick={this.repliedToHandler} variant='outlined' size='small'>\n            Reply\n          </Button>\n        </div>\n        <div className={styles.divider} />\n      </div>\n    );\n  }\n}\n\nexport const CommentComponent = withStyles(classes)(Comment);","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport cx from 'classnames';\nimport { uniqueNamesGenerator, adjectives, animals } from 'unique-names-generator';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '80%',\n    height: '70vh'\n  },\n  chip: {\n    marginLeft: '6px',\n    height: '26px'\n  },\n  repliedToWrapper: {\n    marginTop: '10px'\n  },\n  appBar: {\n    position: 'relative',\n    backgroundColor: '#424b5f',\n    boxShadow: 'none'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    textTransform: 'capitalize',\n    flex: 1,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '30px 40px',\n    flexDirection: 'column',\n    flex: 1\n  },\n  textField: {\n    width: '100%'\n  },\n  smallTextField: {\n    width: 200\n  },\n  nickNameWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: '10px'\n  },\n  formControl: {\n    margin: 0\n  },\n  controlBtns: {\n    marginTop: '16px',\n    marginLeft: 'auto',\n    textTransform: 'capitalize',\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    fontWeight: 'bold',\n    boxShadow: 'none',\n    marginLeft: '16px'\n  },\n  submitBtn: {\n    backgroundColor: '#65c178',\n    fontWeight: 'bold',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#159776'\n    },\n  }\n}));\n\nexport const CreateCommentComponent = (\n  {\n    username = '',\n    onCreateComment,\n    repliedTo,\n    onRepliedToReset\n  }\n) => {\n  const classes = useStyles();\n  const [isChecked, setIsChecked] = useState(!!username);\n  const [nickName, setNickName] = useState(username);\n  const [commentText, setCommentText] = useState('');\n\n  const toggleAutoGenerator = () => {\n    const config = {\n      dictionaries: [adjectives, animals],\n      separator: ' ',\n      length: 2,\n    };\n\n    const value = !isChecked ? uniqueNamesGenerator(config) : '';\n\n    setNickName(value);\n    setIsChecked(!isChecked);\n  };\n\n  const updateCommentText = ({ target: { value } }) => setCommentText(value);\n\n  const updateUserNickName = ({ target: { value } }) => setNickName(value);\n\n  const resetCommentFields = () => {\n    setCommentText('');\n    setIsChecked(false);\n  };\n\n  const createCommentHandler = () => {\n    onRepliedToReset && onRepliedToReset();\n\n    onCreateComment({ nickName, commentText, repliedTo })\n      .then(resetCommentFields);\n  };\n\n  return (\n    <div>\n      {!username && (\n        <div className={classes.nickNameWrapper}>\n          <TextField\n            autoComplete='off'\n            id=\"standard-basic\"\n            className={cx(classes.textField, classes.smallTextField)}\n            onChange={updateUserNickName}\n            required\n            value={nickName}\n            name=\"username\"\n            label=\"Anon nick name\"\n          />\n          <FormControlLabel\n            className={classes.formControl}\n            control={\n              <Checkbox\n                checked={isChecked}\n                onChange={toggleAutoGenerator}\n                color=\"primary\"\n              />\n            }\n            label=\"Generate nick name for you?\"\n          />\n        </div>\n      )}\n\n      {repliedTo && (\n        <div className={classes.repliedToWrapper}>\n          Comment replied to\n          <Chip\n            label={`@${repliedTo}`}\n            onDelete={onRepliedToReset}\n            color=\"primary\"\n            variant=\"outlined\"\n            className={classes.chip}\n          />\n        </div>\n      )}\n      <TextField\n        required\n        autoComplete='off'\n        id=\"standard-multiline-flexible\"\n        label=\"Your comment\"\n        multiline\n        rows=\"6\"\n        value={commentText}\n        onChange={updateCommentText}\n        name=\"text\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\" // ?\n        // variant=\"outlined\" // ?\n\n      />\n\n      <div className={classes.controlBtns}>\n        <Button\n          variant=\"outlined\"\n          onClick={resetCommentFields}\n          className={classes.button}\n        >\n          Reset\n        </Button>\n\n        <Button\n          variant=\"outlined\"\n          onClick={createCommentHandler}\n          color=\"primary\"\n          className={cx(classes.button)}\n        >\n          Create Comment\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nconst Loader = () => <p> Loading...</p>;\n\nexport default Loader;\n","import React, { Component, Fragment, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\nimport cx from 'classnames';\n\nimport styles from './ThreadComponent.module.scss';\nimport { ThreadAuthorComponent } from '../ThreadAuthorComponent';\nimport { ThreadAuditComponent } from '../ThreadAuditComponent';\nimport { ManipulateThreadComponent } from '../ManipulateThreadComponent';\nimport { CommentComponent } from '../CommentComponent';\nimport { CreateCommentComponent } from '../CreateCommentComponent';\nimport Loader from '../Loader/Loader';\n\nconst randomize = () => Math.floor(Math.random() * 10);\nconst PREVIEW = 'preview';\nconst FULL = 'full';\nconst viewTypes = [PREVIEW, FULL];\n\n//todo like logic- when to disable, already liked functionality, dislike cancels like etc.\n\nexport class ThreadComponent extends Component {\n  constructor(props) {\n    super(props);\n    const { threadView } = props;\n\n    this.renderContent = threadView === FULL ? this.renderThread : this.renderPreviewThread;\n\n    this.state = {\n      editThreadOpen: false,\n      repliedTo: ''\n    };\n  }\n\n  onRepliedToReset = () => this.setState({ repliedTo: '' })\n\n  closeEditThread = () => this.setState({ editThreadOpen: false });\n\n  openEditThread = () => {\n    const {\n      actions: { setThreadData },\n      thread: { text, _id, title }\n    } = this.props;\n    setThreadData({ text, _id, title });\n\n    this.setState({ editThreadOpen: true });\n  };\n\n  renderPreviewThread = () => {\n    const {\n      thread: {\n        author: { username } = {},\n        subscribersCount,\n        dislikesCount,\n        likesCount,\n        createdDate,\n        commentsCount\n      }\n    } = this.props;\n\n    return (\n      <Fragment>\n        <div>\n          <ThreadAuthorComponent username={username} />\n          {this.renderThreadHeader()}\n          <ThreadAuditComponent\n            subscribersCount={subscribersCount}\n            dislikesCount={dislikesCount}\n            likesCount={likesCount}\n            likeStatus={this.likeStatus()}\n            createdDate={createdDate}\n          />\n        </div>\n        <div className={styles.answersCount}>\n          <div className={styles.counterWrapper}>\n            <QuestionAnswerOutlinedIcon />\n            {commentsCount}\n          </div>\n          <span>answer(s)</span>\n        </div>\n      </Fragment>\n    );\n  };\n\n  subscriptionHandler = () => {\n    const {\n      actions: {\n        subscribeToThread,\n        unsubscribeFromThread\n      },\n      thread: { _id: threadId },\n      userId\n    } = this.props;\n\n    const isSubscribed = this.isSubscribed();\n    const params = { threadId, userId };\n\n    if (isSubscribed) {\n      unsubscribeFromThread(params)\n    } else {\n      subscribeToThread(params);\n    }\n  };\n\n  isSubscribed = () => {\n    const { thread: { subscribers }, userId } = this.props;\n    return !!subscribers.find(user => user.userId === userId);\n  };\n\n  isAuthor = () => {\n    const { thread: { author: { userId: authorId } }, userId } = this.props;\n\n    return authorId === userId;\n  };\n\n  findUserInThread = () => {\n    const { userId, thread: { users } } = this.props;\n\n    return users.find(user => user.userId === userId);\n  };\n\n  likeStatus = () => {\n    const {\n      userId,\n      thread: {\n        likesList,\n        dislikesList\n      }\n    } = this.props;\n\n    if (likesList.find(el => el.userId === userId)) return 'liked';\n    if (dislikesList.find(el => el.userId === userId)) return 'disliked';\n    return null\n  };\n\n  repliedToHandler = (username) => {\n    window.scrollTo(0,document.body.scrollHeight);\n    this.setState({ repliedTo: username });\n  };\n\n  renderThread = () => {\n    const { editThreadOpen, repliedTo } = this.state;\n\n    const {\n      userId,\n      thread: {\n        _id: id,\n        text,\n        subscribersCount,\n        dislikesCount,\n        likesCount,\n        commentsList,\n        createdDate,\n        author: { userId: threadAuthorId, username: authorName } = {}\n      },\n      likeThread,\n      dislikeThread,\n      actions: { onCreateComment, onUpdateComment }\n    } = this.props;\n    const subscribed = this.isSubscribed();\n    const { username } = this.findUserInThread() || {};\n\n    return (\n      <div className={styles.threadFullWrapper}>\n        <div className={styles.headingWrapper}>\n          <ThreadAuthorComponent username={authorName} />\n          {\n            this.isAuthor() && <Button onClick={this.openEditThread} color=\"secondary\">\n              Edit\n            </Button>\n          }\n        </div>\n        <div className={styles.divider} />\n        {this.renderThreadHeader()}\n        <div className={styles.description}>\n          {text}\n        </div>\n        <div className={styles.subsWrapper}>\n          <ThreadAuditComponent\n            createdDate={createdDate}\n            subscribersCount={subscribersCount}\n            dislikesCount={dislikesCount}\n            likesCount={likesCount}\n            likeStatus={this.likeStatus()}\n            dislike={dislikeThread.bind(null, { id, userId })}\n            like={likeThread.bind(null, { id, userId })}\n            isClickable\n          />\n\n          <Button\n            className={styles.btn}\n            variant=\"outlined\"\n            onClick={this.subscriptionHandler}\n            color={subscribed ? 'secondary' : 'primary'}\n          >\n            {subscribed ? 'Unsubscribe' : 'Subscribe'}\n          </Button>\n        </div>\n        <div className={styles.dividerWrapper}>\n          Total comments ({8})\n        </div>\n\n        <div className={styles.comments}>\n          {commentsList.map(el => {\n\n            return (\n              <CommentComponent\n                userId={userId}\n                onUpdateComment={onUpdateComment}\n                editable={el.author.userId === userId}\n                comment={el}\n                isAuthorsComment={el.author.userId === threadAuthorId}\n                repliedToHandler={this.repliedToHandler}\n              />\n            )\n          })}\n        </div>\n\n        <div className={styles.dividerWrapper}>\n          {!!username ?\n            <span className={styles.userHighlight}>{username},</span> : ''} Write your comment here\n        </div>\n        <CreateCommentComponent\n          repliedTo={repliedTo}\n          onCreateComment={onCreateComment}\n          username={username}\n          onRepliedToReset={this.onRepliedToReset}\n        />\n\n        <ManipulateThreadComponent\n          onClose={this.closeEditThread}\n          isOpen={editThreadOpen}\n          action=\"edit\"\n        />\n      </div>\n    );\n  };\n\n  renderThreadHeader = () => {\n    const { threadView } = this.props;\n    const { title = 'What to learn SWIFT or GO?', _id: id } = this.props.thread;\n\n\t\treturn (\n\t\t\t<NavLink to={`/feed/${id}`}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={cx(styles.heading, {\n\t\t\t\t\t\t[styles.hovered]: threadView === PREVIEW\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{title}\n\t\t\t\t</div>\n\t\t\t</NavLink>\n\t\t);\n\t};\n\n\trender() {\n\t\treturn <div className={styles.wrapper}>{this.renderContent()}</div>;\n\t}\n}\n\nThreadComponent.propTypes = {\n\theading: PropTypes.string,\n\tanswersCount: PropTypes.number,\n\tsubscribersCount: PropTypes.number,\n\tcreationDate: PropTypes.object,\n\tcontent: PropTypes.string,\n\tlikesCount: PropTypes.number,\n\tdislikesCount: PropTypes.number,\n\tthreadView: PropTypes.oneOf(viewTypes),\n\tauthor: PropTypes.object,\n\tonLikeClick: PropTypes.func,\n\tonDislikeClick: PropTypes.func,\n\tonSubscribeClick: PropTypes.func,\n\tonEditClick: PropTypes.func\n};\n\nThreadComponent.defaultProps = {\n\tthreadView: FULL, // edit\n\tsubscribersCount: randomize(),\n\tanswersCount: randomize(),\n\tdislikesCount: randomize(),\n\tlikesCount: randomize(),\n\tauthor: {}\n};\n","import React from 'react';\n\nimport { ThreadComponent } from '../TreadComponent';\nimport Loader from '../Loader/Loader';\n\nexport class ThreadViewPage extends React.Component {\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tactions: { getThreadById },\n\t\t\tmatch: {\n\t\t\t\tparams: { id }\n\t\t\t}\n\t\t} = this.props;\n\t\tgetThreadById(id);\n\t}\n\n\tcomponentDidUpdate({match: {\n\t\tparams: { id: prevId }\n\t}}) {\n\n\t\tconst {\n\t\t\tactions: { getThreadById },\n\t\t\tmatch: {\n\t\t\t\tparams: { id }\n\t\t\t}\n\t\t} = this.props;\n\n\t\tprevId !== id && getThreadById(id);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tthread,\n\t\t\tactions: { likeThread, dislikeThread }\n\t\t} = this.props;\n\t\t\n\t\tif (!thread) return <Loader />;\n\n\t\treturn (\n\t\t\t<ThreadComponent likeThread={likeThread} dislikeThread={dislikeThread} threadView=\"full\" {...this.props} />\n\t\t);\n\t}\n}\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { ThreadViewPage as ThreadView } from './ThreadViewPage';\nimport {\n  setThreadData,\n  subscribeToThread,\n  unsubscribeFromThread,\n  getThreadById,\n  onCreateComment,\n  onUpdateComment,\n  like as likeThread,\n  dislike as dislikeThread\n} from '../../actions/threadActions';\n\nconst mapStateToProps = (\n  {\n    userReducer: { user: { _id } },\n    threadsReducer: { selectedThread }\n  }\n) => ({ userId: _id, thread: selectedThread });\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators({\n    setThreadData,\n    subscribeToThread,\n    unsubscribeFromThread,\n    getThreadById,\n    onCreateComment,\n    onUpdateComment,\n    likeThread,\n    dislikeThread\n  }, dispatch)\n});\n\nexport const ThreadViewPage = connect(mapStateToProps, mapDispatchToProps)(ThreadView);\n\n","import React from 'react';\n\nimport { ThreadComponent } from '../TreadComponent';\nimport Loader from '../Loader/Loader';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport styles from './AllThreadsPage.module.scss';\n\nconst NEWEST = 'Newest';\nconst MOST_DISCUSSED = 'Most Discussed';\nconst MOST_LIKED = 'Most Liked';\n\nconst sortOptions = [\n\t{ label: NEWEST, icon: <ScheduleIcon /> },\n\t{ label: MOST_LIKED, icon: <FavoriteIcon /> },\n\t{ label: MOST_DISCUSSED, icon: <WhatshotIcon /> }\n];\n\nexport class AllThreadsPage extends React.Component {\n\tstate = {\n\t\tsortBy: null,\n\t\tsortDirection: 'DESC'\n\t};\n\n\tsortByChangeHandler = () => ({ currentTarget: { name } }) => {\n\t\tconst { sortBy, sortDirection } = this.state;\n\n\t\tif (name === sortBy) {\n\t\t\tconst newDirection = sortDirection === 'ASC' ? 'DESC' : 'ASC';\n\n\t\t\tthis.setState({ sortDirection: newDirection });\n\t\t} else {\n\t\t\tthis.setState({ sortBy: name, sortDirection: 'DESC' });\n\t\t}\n\t};\n\n\tgetSortedThreads = () => {\n\t\tconst { sortBy } = this.state;\n\t\tconst { threads } = this.props;\n\n\t\tswitch (sortBy) {\n\t\t\tcase NEWEST: {\n\t\t\t\treturn [...threads].sort((a, b) => {\n\t\t\t\t\treturn new Date(b.createdDate) - new Date(a.createdDate);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcase MOST_LIKED: {\n\t\t\t\treturn [...threads].sort((a, b) => {\n\t\t\t\t\treturn b.likesCount - a.likesCount;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcase MOST_DISCUSSED: {\n\t\t\t\treturn [...threads].sort((a, b) => {\n\t\t\t\t\treturn b.commentsCount - a.commentsCount;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\treturn threads;\n\t\t\t}\n\t\t}\n\t};\n\n\trenderThreads() {\n\t\tconst { sortDirection } = this.state;\n\t\tconst sortedThreads = this.getSortedThreads().map(el => (\n\t\t\t<ThreadComponent key={el._id} threadView=\"preview\" thread={el} />\n\t\t));\n\n\t\treturn sortDirection === 'DESC' ? sortedThreads : sortedThreads.reverse();\n\t}\n\n\trenderButtons() {\n\t\tconst { sortDirection } = this.state;\n\n\t\treturn sortOptions.map(({ label, icon }) => (\n\t\t\t<Button\n\t\t\t\tkey={label}\n\t\t\t\tonClick={this.sortByChangeHandler()}\n\t\t\t\tname={label}\n\t\t\t\tclassName={this.isActive(label) ? styles.active : ''}\n\t\t\t>\n\t\t\t\t<div className={styles.iconWrapper}>{icon}</div>\n\t\t\t\t{label}\n\t\t\t\t<div className={styles.iconWrapper}>\n\t\t\t\t\t{this.isActive(label) ? (\n\t\t\t\t\t\tsortDirection === 'DESC' ? (\n\t\t\t\t\t\t\t<ArrowDownwardIcon />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ArrowUpwardIcon />\n\t\t\t\t\t\t)\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</Button>\n\t\t));\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tactions: { getAllThreads }\n\t\t} = this.props;\n\t\tgetAllThreads();\n\t}\n\n\tisActive = label => this.state.sortBy === label;\n\n\trender() {\n\t\tconst { threads } = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={styles.buttonContainer}>\n\t\t\t\t\t<ButtonGroup size=\"small\" aria-label=\"small outlined button group\" color=\"primary\">\n\t\t\t\t\t\t{this.renderButtons()}\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</div>\n\t\t\t\t{threads.length ? this.renderThreads() : <Loader />}\n\t\t\t</>\n\t\t);\n\t}\n}\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { AllThreadsPage as AllThreads } from './AllThreadsPage';\nimport { getAllThreads } from '../../actions/threadActions';\n\nconst mapStateToProps = (\n  {\n    userReducer: { user: { _id } },\n    threadsReducer: { threads }\n  }\n) => ({ userId: _id, threads });\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators({\n    getAllThreads\n  }, dispatch)\n});\n\nexport const AllThreadsPage = connect(mapStateToProps, mapDispatchToProps)(AllThreads);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Header } from '../Header';\nimport Navbar from '../Navbar/Navbar';\n// import { ThreadComponent } from '../TreadComponent';\n\nimport { ThreadViewPage } from '../ThreadViewPage';\nimport { AllThreadsPage } from '../AllThreadsPage';\n\nimport styles from './Layout.module.scss';\nimport { userService } from '../../services/index';\n\nconst Feed = () => <p>Feed</p>;\nconst Cabinet = () => <p>Personal Cabinet</p>;\n\nclass LoginPage extends React.Component {\n\tloginHandler = () => {\n\t\tuserService\n\t\t\t.loginUser()\n\t\t\t.then(user => this.props.setUser(user))\n\t\t\t.catch(err => console.log(err));\n\t};\n\n\tlogOutHandler = () => userService.signOut().then(() => this.props.logOut());\n\n\trender() {\n\t\treturn <button onClick={this.loginHandler}>Kek in</button>;\n\t}\n}\n\nexport default function Layout({ isUserLoggedIn, setUser }) {\n\tif (!isUserLoggedIn) return <LoginPage setUser={setUser} />;\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Navbar />\n\t\t\t<div className={styles.mainWrapper}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={AllThreadsPage} />\n\t\t\t\t\t<Route path=\"/feed/:id\" component={ThreadViewPage} />\n\t\t\t\t\t<Route path=\"/feed\" component={Feed} />\n\t\t\t\t\t<Route path=\"/cabinet\" component={Cabinet} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","export const SET_USER = 'SET_USER';\nexport const LOG_OUT = 'LOG_OUT';\n","import React, { Component } from 'react';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nimport Layout from './components/Layout/Layout';\n\nimport { connect } from 'react-redux';\nimport { setUser, logOut } from './actions/userActions';\n\nclass App extends Component {\n  componentDidMount() {\n    window.gapi.load('auth2', () => {\n      window.gapi.auth2\n        .init({\n          client_id: '232822822071-1q970aukj04j6cv7p5buinsqs5vn0ks2'\n        })\n        .then(console.log);\n    });\n  }\n\n  // isUserLoggedIn = () => !!this.props.user; //42069\n  isUserLoggedIn = () => true;\n\n  render() {\n    const { setUser, logOut } = this.props.actions;\n    const { _id } = this.props.user || {};\n\n\n    return (\n      <div className=\"App\">\n        <Layout isUserLoggedIn={this.isUserLoggedIn()} logOut={logOut} setUser={setUser} userId={_id} />\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ userReducer: { user } }) => {\n  return {\n    user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {\n      setUser: user => dispatch(setUser(user)),\n      logOut: () => dispatch(logOut())\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { SET_USER, LOG_OUT } from '../types/userTypes';\n\nexport function setUser(user) {\n  return {\n    type: SET_USER,\n    user\n  }\n}\n\nexport function logOut() {\n  return {\n    type: LOG_OUT\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_USER, LOG_OUT } from '../types/userTypes';\n\nconst initialState = {\n\t// user: null\n\tuser: {\n\t\tcreatedThreads: [],\n\t\temail: \"tyakymiuk@griddynamics.com\",\n\t\tsubscribedThreads: [],\n\t\t__v: 0,\n\t\t_id: \"5dd5afc8246ffd1d8a45e02f\"\n\t\t// _id: \"5db078ddb266691dcc21c801\"\n\t}\n};\n\nconst userReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { user: action.user };\n\n\t\tcase LOG_OUT:\n\t\t\treturn initialState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default userReducer;\n","import {\n\tUPDATE_THREAD_FIELD,\n\tRESET_THREAD,\n\tSET_THREAD_DATA,\n\tSET_SELECTED_THREAD,\n  SET_ALL_THREADS,\n\tCHANGE_THREAD\n} from '../types/threadTypes';\n\nconst initialState = {\n\tthreadData: {\n\t\ttitle: '',\n\t\ttext: '',\n\t\tusername: '',\n\t\t_id: ''\n\t},\n\tselectedThread: null,\n\tthreads: []\n};\n\n// todo think about data flow from redux to thread and modal, current implementation is prototype\n\nconst threadsReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase UPDATE_THREAD_FIELD: {\n\t\t\tconst {\n\t\t\t\tpayload: { field, value }\n\t\t\t} = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tthreadData: {\n\t\t\t\t\t...state.threadData,\n\t\t\t\t\t[field]: value\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcase SET_SELECTED_THREAD: {\n\t\t\tconst { payload: selectedThread } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedThread\n\t\t\t};\n\t\t}\n\n\t\tcase SET_ALL_THREADS: {\n\t\t\tconst { payload: threads } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tthreads\n\t\t\t};\n\t\t}\n\n\t\tcase RESET_THREAD: {\n\t\t\treturn { ...state, threadData: initialState.threadData };\n\t\t}\n\n\t\tcase SET_THREAD_DATA: {\n\t\t\tconst {\n\t\t\t\tpayload: { text, _id, title }\n\t\t\t} = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tthreadData: {\n\t\t\t\t\t...state.threadData,\n\t\t\t\t\ttext,\n\t\t\t\t\t_id,\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcase CHANGE_THREAD: {\n\t\t\tconst {\n\t\t\t\tpayload: { id, thread }\n      } = action;\n\t\t\t\n\t\t\tconst threadsCopy = [...state.threads]\n\t\t\tconst foundThreadIndex = threadsCopy.findIndex(el => el._id === id);\n\t\t\tthreadsCopy[foundThreadIndex] = thread;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tthreads: threadsCopy,\n\t\t\t\tselectedThread: thread\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default threadsReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport threadsReducer from './threadsReducer';\n\nconst initialState = {};\n\nconst appReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers({ appReducer, userReducer, threadsReducer });\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware( thunk),\n    // applyMiddleware(logger, thunk),\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store.js';\n\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>  \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"ThreadAuditComponent_divider__3bYyt\",\"icon\":\"ThreadAuditComponent_icon__1IRRC\",\"active\":\"ThreadAuditComponent_active__YvlO0\",\"threadMetaInfo\":\"ThreadAuditComponent_threadMetaInfo__2o4SZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"CommentComponent_divider__1YV3i\",\"flexWrapper\":\"CommentComponent_flexWrapper__28BtY\",\"comment\":\"CommentComponent_comment__1ppli\",\"text\":\"CommentComponent_text__1Vy4n\",\"leftShift\":\"CommentComponent_leftShift__1gzR2\",\"btnHolder\":\"CommentComponent_btnHolder__36xzL\",\"chip\":\"CommentComponent_chip__2X-gR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"Header_logoWrapper__zM9x7\",\"logo\":\"Header_logo__3T0lc\",\"verticalDivider\":\"Header_verticalDivider__20pyc\",\"createThreadWrapper\":\"Header_createThreadWrapper__1qHT8\",\"searchWrapper\":\"Header_searchWrapper__1hx1Z\",\"link\":\"Header_link__1uLZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"threadAuthor\":\"ThreadAuthorComponent_threadAuthor__2QMkp\",\"threadAuthorBox\":\"ThreadAuthorComponent_threadAuthorBox__2vu8C\",\"authorInfo\":\"ThreadAuthorComponent_authorInfo__111gV\",\"role\":\"ThreadAuthorComponent_role__3I2od\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"AllThreadsPage_buttonContainer__28Rzi\",\"iconWrapper\":\"AllThreadsPage_iconWrapper__3e-AC\",\"active\":\"AllThreadsPage_active__2GHQU\"};"],"sourceRoot":""}